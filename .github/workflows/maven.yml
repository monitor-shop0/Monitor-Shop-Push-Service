# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

env:
  SERVICE: push-service

jobs:
  build:
    runs-on: [ build ]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.8.2
        
    - name: Build with Maven
      run: mvn clean package -DskipTests
      
    - name: Copy executable file
      run: mkdir -p ~/mshop && cp ./target/*.jar ~/mshop/${{ env.SERVICE }}-tmp.jar
      
  deploy:
    needs: [ build ]
    runs-on: [ deploy ]
    steps:
    - name: Set execute permission
      run: chmod +rw -R ~/mshop
    - name: Stop docker container
      run: docker rm -f ${{ env.SERVICE }}
    - name: Replace executable file
      run: mv ~/mshop/${{ env.SERVICE }}-tmp.jar ~/mshop/${{ env.SERVICE }}.jar
    - name: Deploy
      run: docker run -itd --network app-net --restart=unless-stopped  --name ${{ env.SERVICE }} -v ~/mshop/${{ env.SERVICE }}.jar:/app/app.jar bitnami/java:17 java -jar /app/app.jar -Dspring.profiles.active=sv -Dserver.port=80
